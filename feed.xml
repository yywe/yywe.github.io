<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://yywe.github.io/</id><title>Hulua</title><subtitle>Hulua's personal website, share posts on cloud computing, database technology, operating system, programming language and artificial intelligence.</subtitle> <updated>2023-08-04T20:46:35-04:00</updated> <author> <name>Hulua</name> <uri>https://yywe.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://yywe.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://yywe.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2023 Hulua </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>How to Persist Your SSH Session in Remote Server</title><link href="https://yywe.github.io/posts/how-to-persist-your-ssh-session-in-remote-server/" rel="alternate" type="text/html" title="How to Persist Your SSH Session in Remote Server" /><published>2023-07-29T08:55:00-04:00</published> <updated>2023-08-04T20:45:52-04:00</updated> <id>https://yywe.github.io/posts/how-to-persist-your-ssh-session-in-remote-server/</id> <content src="https://yywe.github.io/posts/how-to-persist-your-ssh-session-in-remote-server/" /> <author> <name>Hulua</name> </author> <category term="Linux" /> <summary> One of the major advatanage of developing server side applications in your local enviornment is that the terminal session never gets disconnected. The session is always available. ➜ yywe.github.io git:(master) ✗ ls Gemfile _javascript assets Gemfile.lock _layouts gulpfile.js LICENSE _plugins ... </summary> </entry> <entry><title>How to Traverse Trees in Rust</title><link href="https://yywe.github.io/posts/how-to-traverse-trees-in-rust/" rel="alternate" type="text/html" title="How to Traverse Trees in Rust" /><published>2023-07-16T08:55:00-04:00</published> <updated>2023-08-04T20:45:52-04:00</updated> <id>https://yywe.github.io/posts/how-to-traverse-trees-in-rust/</id> <content src="https://yywe.github.io/posts/how-to-traverse-trees-in-rust/" /> <author> <name>Hulua</name> </author> <category term="Rust" /> <summary> Today learned some something new about Rust when trying to use Rust to traverse binary trees. There are some pattern differences while using Rust to traverse binary trees compared with other languages. One main difference is that Rust does not provide NULL (or Nil) pointer. The alternative to refer to a case without children is None of Option. Also the definition of TreeNode is somewhat differe... </summary> </entry> <entry><title>Kubernetes ReplicaSet Controller Design Principle</title><link href="https://yywe.github.io/posts/kubernetes-replicatset-controller/" rel="alternate" type="text/html" title="Kubernetes ReplicaSet Controller Design Principle" /><published>2022-04-27T08:55:00-04:00</published> <updated>2023-08-04T20:45:52-04:00</updated> <id>https://yywe.github.io/posts/kubernetes-replicatset-controller/</id> <content src="https://yywe.github.io/posts/kubernetes-replicatset-controller/" /> <author> <name>Hulua</name> </author> <category term="Kubernetes" /> <category term="Source Code" /> <summary> In kubernetes, controllers play a vital role to orchestrate resources. For beginners learning kubernetes, we need to understand what are controllers. In short, controllers manipulate resources. In particular, resources indicate a collection of static object definition, and they exist in the ETCD database (managed by ApiServer). For a simple example, you can throw the below pod yaml file apiVers... </summary> </entry> <entry><title>A Better Way to Debug TiDB Source Code</title><link href="https://yywe.github.io/posts/a-better-way-to-debug-tidb-source-code/" rel="alternate" type="text/html" title="A Better Way to Debug TiDB Source Code" /><published>2022-04-08T08:55:00-04:00</published> <updated>2022-04-08T09:07:44-04:00</updated> <id>https://yywe.github.io/posts/a-better-way-to-debug-tidb-source-code/</id> <content src="https://yywe.github.io/posts/a-better-way-to-debug-tidb-source-code/" /> <author> <name>Hulua</name> </author> <category term="Database" /> <category term="TiDB" /> <summary> TiDB is an interesting SQL database written in Golang. One major difference compared with popular exsiting relational databases is that in TiDB storage is separated as an independant runtime. The database (SQL) layer will call the storage layer to access data. For database learners, most of us actually will only be interest in the SQL part, i.e, from SQL statment in string form how we can get ... </summary> </entry> <entry><title>How to Debug Kubernetes Source Code?</title><link href="https://yywe.github.io/posts/how-to-debug-k8s-sourceCode/" rel="alternate" type="text/html" title="How to Debug Kubernetes Source Code?" /><published>2022-04-01T08:55:00-04:00</published> <updated>2022-04-01T08:55:00-04:00</updated> <id>https://yywe.github.io/posts/how-to-debug-k8s-sourceCode/</id> <content src="https://yywe.github.io/posts/how-to-debug-k8s-sourceCode/" /> <author> <name>Hulua</name> </author> <category term="Kubernetes" /> <category term="Source Code" /> <summary> Reading the source code of kubernetes is a great way to learn the internals of kubernetes. In this post, we will explore how to use debugger (dlv) to track the source code execution flow. Prerequisite To setup a debug environment, there are a few prerequisites. Linux system. A copy of Kubernetes source code (of course). Learn how to use dlv. The very first step is to ensure you are a... </summary> </entry> </feed>
